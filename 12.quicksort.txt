// ASSIGNMENT NO 12
// QUICK SORT
#include <iostream>
using namespace std;
class Employee
{
public:
    string name;
    double salary;
    Employee(string n, double s)
    {
        name = n;
        salary = s;
    }
    // Default constructor
    Employee() : name(""), salary(0.0) {}
};
int partition(Employee arr[], int low, int high)
{
    double pivot = arr[high].salary;
    int i = low - 1;
    for (int j = low; j <= high - 1; j++)
    {
        if (arr[j].salary < pivot)
        {
            i++;
            swap(arr[i], arr[j]);
        }
    }
    swap(arr[i + 1], arr[high]);
    return i + 1;
}
void quickSort(Employee arr[], int low, int high)
{
    if (low < high)
    {
        int pivot = partition(arr, low, high);
        quickSort(arr, low, pivot - 1);
        quickSort(arr, pivot + 1, high);
    }
}
void displayTopEmployees(Employee arr[], int size, int top)
{
    if (top > size)
    {
        top = size;
    }
    cout << "Top " << top << " Employees with highest salary:" << endl;
    for (int i = size - 1; i >= size - top; i--)
    {
        cout << "Name: " << arr[i].name << ", Salary: " << arr[i].salary << endl;
    }
}
int main()
{
    const int size = 10;
    Employee employees[size];
    for (int i = 0; i < size; i++)
    {
        cout << "Enter employee name: ";
        cin >> employees[i].name;
        cout << "Enter employee salary: ";
        cin >> employees[i].salary;
    }
    quickSort(employees, 0, size - 1);
    displayTopEmployees(employees, size, 5);
    return 0;
}
